一、
   1、数据类型
     （1）基本数据类型
                      整型、字符型、浮点型（单精度型、双精度型）、枚举类型
     （2）构造数据类型
                      数组类型、结构体类型、共用体类型
     （3）指针类型
     （4）空类型
     （5）
     （6）
     （7）
     （8）
     （9）
   2、变量与常量
     （1）变量用小写表示，常量用大写字母表示
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、整型
     （1）十进制整常型（有符号数，无符号数，没有前缀，数码0-9），范围：0-65535（无符号数）、-32768-+32767（有符号数）
     （2）八进制整常型（无符号数，前缀为0，数码0-7），范围：0-0177777（无符号数）
     （3）十六进制整常型（无符号数，前缀为0X或0x，数码为0-9、A-F或a-f），范围：0X0-0XFFFF或0x0-0xFFFF
     （4）整常型无符号数的后缀为“U”或“u”，如果超过范围，用长整形来表示，加后缀为“L”或“l”（长整形分配4个字节存储空间，整型分配2个字节存储空间，要注意运算和输出格式）
     （5）分类（无符号数为前加unsigned）
              基本型：int(2字节)
              短整型：short(2字节)
              长整型：long(4字节)
          
     （6）定义
              类型说明符 变量名标识符1,变量名标识符2,...;
          注意
              允许在一个类型说明符后，定义多个相同类型的变量。各变量名之间用逗号间隔。类型说明符与变量名之间至少用一个空格间隔。
              最后一个变量名之后必须以“；”号结尾。
              变量定义必须放在变量使用之前。一般放在函数体的开头部分。
     （7）
     （8）
     （9）
   4、浮点型
     （1）十进制数（数码0-9和小数点，必须有小数点）
     （2）指数（由十进制数，加阶码标志“e”或“E”以及阶码（只能为整数，可以带符号）组成，必须有小数点，后缀为“f”或“F”，形式：a E n（a 为十进制数，n 为十进制整数））
     （3）分类
              单精度：float(（4字节，7位有效数字）
              双精度：double（8字节，16位有效数字）
              长双精度：long double（16字节）
     （4）全部按双精度double型处理
     （5）
     （6）
     （7）
     （8）
     （9）	

   5、
     （1）特点
              字符常量只能用单引号括起来
              字符常量只能是单个字符
     （2）转义字符
                      转义字符	转义字符的意义	ASCII 代码
                      \n	回车换行	10
                      \t	横向跳到下一制表位置	9
                      \b	退格	8
                      \r	回车	13
                      \f	走纸换页	12
                      \\	反斜线符"\"	92
                      \'	单引号符	39
                      \”	双引号符	34
                      \a	鸣铃	7
                      \ddd	1～3 位八进制数所代表的字符	
                      \xhh	1～2 位十六进制数所代表的字符
     （3）char
     （4）每个字符变量被分配一个字节的内存空间，因此只能存放一个字符。字符值是以 ASCII 码的形式存放在变量的内存单元之中的。
     （5）Ｃ语言允许对整型变量赋以字符值，也允许对字符变量赋以整型值。在输出时，允许把字符变量按整型量输出，也允许把整型量按字符量输出。
     （6）整型量为二字节量，字符量为单字节量，当整型量按字符型量处理时，只有低八位字 节参与处理。
     （7）字符串常量
                    字符常量由单引号括起来，字符串常量由双引号括起来。
                    字符常量只能是单个字符，字符串常量则可以含一个或多个字符。
                    字符串常量不可以赋予字符变量，但是可以用字符数组来存放字符串常量
                    字符常量占一个字节的内存空间。字符串常量占的内存字节数等于字符串中字节数 加 1。增加的一个字节中存放字符"\0" (ASCII 码为 0)。这是字符串结束的标志。
     （8）
     （9）
   6、
     （1）变量赋初值
                    类型说明符 变量1 = 值1, 变量2 = 值2, ...;
     （2）不允许连续赋值
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）变量数据类型的自动转化
     （2）若参与运算量的类型不同，则先转换成同一类型，然后进行运算。
     （3）转换按数据长度增加的方向进行，以保证精度不降低。
     （4）所有的浮点运算都是以双精度进行的，即使仅含 float 单精度量运算的表达式，也 要先转换成 double 型，再作运算。
     （5）char 型和 short 型参与运算时，必须先转换成 int 型。
     （6）在赋值运算中，赋值号两边量的数据类型不同时，赋值号右边量的类型将转换为 左边量的类型。如果右边量的数据类型长度大于左边时，将丢失一部分数据，这样 会降低精度，丢失的部分按四舍五入向前舍入。
     （7）char/short --> int -->unsigned --> long -->double
     （8）变量数据类型的强制转化 形式 (类型说明符)(表达式) 把表达式的运算结果强制转换成类型说明符所表示的类型
     （9）无论是强制转换或是自动转换，都只是为了本次运算的需要而对变量的数据长度进 行的临时性转换，而不改变数据说明时对该变量定义的类型。
   8、
     （1）运算符
                算术运算符:用于各类数值运算。包括加(+)、减(-)、乘(*)、除(/)、求余(或称模运算，%)、 自增(++)、自减(--)共七种。 
                关系运算符:用于比较运算。包括大于(>)、小于(<)、等于(==)、 大于等于(>=)、小于等于(<=)和不等于(!=)六种。 
                逻辑运算符:用于逻辑运算。包括与(&&)、或(||)、非(!)三种。 
                位操作运算符:参与运算的量，按二进制位进行运算。包括位与(&)、位或(|)、位非(~)、 位异或(^)、左移(<<)、右移(>>)六种。 
                赋值运算符:用于赋值运算，分为简单赋值(=)、复合算术赋值(+=,-=,*=,/=,%=)和复合位 运算赋值(&=,|=,^=,>>=,<<=)三类共十一种。 
                条件运算符:这是一个三目运算符，用于条件求值(?:)。 
                逗号运算符:用于把若干表达式组合成一个表达式(，)。 
                指针运算符:用于取内容(*)和取地址(&)二种运算。
                求字节数运算符:用于计算数据类型所占的字节数(sizeof)。 
                特殊运算符:有括号()，下标[]，成员(→，.)等几种。
     （2）算术运算符
                    加法运算符“+”：加法运算符为双目运算符，即应有两个量参与加法运算。具有右结合性。
                    减法运算符“-”：减法运算符为双目运算符。但“-”也可作负值运算符，此时为单目运算。具有左结合性。
                    乘法运算符“*”：双目运算，具有左结合性。
                    除法运算符“/”：双目运算，具有左结合性。（参与运算量均为整型时，结果也为整型，舍去小数。如果运算量中有一个是实型，则结果为双精度实型。）
     （3）赋值运算符“=”
          x=(a=5)+(b=8);（正确）
          把 5 赋予 a，8 赋予 b，再把 a,b 相加，和赋予 x，故 x 应等于 13。
     （4）类型转换
                  强制转换    （类型说明符）（表达式）
                  自动转换
                          实型赋予整型，舍去小数部分。 
                          整型赋予实型，数值不变，但将以浮点形式存放，即增加小数部分(小数部分的值为 0)。 
                          字符型赋予整型，由于字符型为一个字节，而整型为二个字节，故将字符的 ASCII 码值放到整型量的低八位中，高八位为 0。整型赋予字符型，只把低八位赋予字符量。 
     （5）
     （6）
     （7）
     （8）
     （9）结合性
                左结合性：从左向右运算（z = x + y）
                右结合性：从右向左运算（x = y = z）
   9、
     （1）字符输出函数：putchar();
     （2）字符输入函数：getchar();
     （3）格式输出函数：printf();
                        类型
                           d 以十进制形式输出带符号整数(正数不输出符号) 
                           o 以八进制形式输出无符号整数(不输出前缀 0) 
                         x,X 以十六进制形式输出无符号整数(不输出前缀 Ox) 
                           u 以十进制形式输出无符号整数 
                           f 以小数形式输出单、双精度实数 
                         e,E 以指数形式输出单、双精度实数 
                         g,G 以%f 或%e 中较短的输出宽度输出单、双精度实数 
                           c 输出单个字符 
                           s 输出字符串
                        注意
                            宽度:用十进制整数来表示输出的位数。若实际位数多于定义的宽度， 则按实际位数输出，若实际位数少于定义的宽度则补以空格或 0。 
                            精度:精度格式符以“.”开头，后跟十进制整数。本项的意义是：如果输出数字， 则表示小数的位数；如果输出的是字符，则表示输出字符的个数；若实际位数大于 所定义的精度数，则截去超过的部分。 
     （4）格式输入函数：scanf();
                        类型
                           d 输入十进制整数 
                           o 输入八进制整数 
                           x 输入十六进制整数 
                           u 输入无符号十进制整数 
                         f,e 输入实型数(用小数形式或指数形式) 
                           c 输入单个字符 
                           s 输入字符串 
                        注意
                            宽度：用十进制整数来表示输入的位数。若实际位数多于定义的宽度， 则舍去多余的位数，若实际位数少于定义的宽度则不做操作。 
                            精度：无精度要求
     （5）
     （6）
     （7）
     （8）
     （9）
二、
   1、
     （1）三目运算符：右结合性  a>b?c:(d>e?f:g);
     （2）数组
              一维数组与二位数组
                                int temp[m][n]可以将temp[m]看成一个数组，调用temp[m] [n]
              字符数组
                      字符串
                      定义：
                           char c[]={'c', ' ','p','r','o','g','r','a','m'}; 
                           char c[]={"C program"}; 
                           char c[]="C program"; 
                      注意：
                           1、以“\0”作为结束标志
                           2、输入时，由于字符数组名代表字符数组首地址，不加“&”
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
三、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
四、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
五、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
六、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
七、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
八、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
九、
   1、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   2、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   3、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   4、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   5、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   6、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   7、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   8、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
   9、
     （1）
     （2）
     （3）
     （4）
     （5）
     （6）
     （7）
     （8）
     （9）
