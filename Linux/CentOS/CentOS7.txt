##CentOS6内核升级CentOS7内核

更换软件源
	1、备份
		mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
	2、下载
		wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
	3、清除缓存
		yum clean all
	4、更新缓存
		yum makecache

升级内核
	1、查看内核版本
		uname -r
	2、导入public key
		rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
	3、安装ELRepo（http://elrepo.org/tiki/tiki-index.php）
		rpm -Uvh https://www.elrepo.org/elrepo-release-6-8.el6.elrepo.noarch.rpm
	4、安装kernel-lt或kernel-ml
		yum --enablerepo=elrepo-kernel install kernel-lt -y		kernel-lt		长期支持版本
		yum --enablerepo=elrepo-kernel install kernel-ml -y		kernel-ml		最新稳定版本
	5、编辑/etc/grub.conf，修改Grub引导顺序，修改default值为最新内核顺序索引
		default=0	一般最新安装的内核在第一位
	6、重启并查看内核版本
		reboot
		uname -r


安装docker
	1、查看CentOS内核版本
		uname -r
	2、安装Fedora的EPEL源
		yum install http://ftp.riken.jp/Linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm
	3、添加hop5.repo源
		wget -O /etc/yum.repos.d/hop5.repo http://www.hop5.in/yum/el6/hop5.repo
	4、安装docker.io
		yum install docker-io


解决中文乱码
	1、查看是否存在中文语言包
		locale -a
	2、安装中文语言包
		yum install kde-l10n-Chinese
	3、修改并应用配置
		localectl set-locale LANG=zh_CN
		source /etc/locale.conf

		vim /etc/locale.conf
		LANG=zh_CN
		source /etc/locale.conf
	4、查看时间
		date
		2019年 12月 31日 星期二 23:59:59 CST
	5、修改时间
		date -s "2019-12-31 23:59:59"


1、SSH服务
	安装openssh
		yum install openssh*
	启动sshd服务
		systemctl status sshd
		systemctl start sshd
		systemctl stop sshd
	开机启动sshd服务
		systemctl enable sshd
		systemctl disable sshd
2、firewall防火墙
	查看防火墙规则
		firewall-cmd --list-all
	查看端口80是否开放
		firewall-cmd --query-port=80/tcp
	开放80端口
		firewall-cmd --permanent --add-port=80/tcp
	闭塞80端口
		firewall-cmd --permanent --remove-port=80/tcp
	修改配置需要重新启动防火墙
		firewall-cmd --reload
3、安装jdk
	解压
		tar -xzf jdk-8u181-linux-x64.tar.gz
	移动
		mv jdk1.8.0_181 /usr/local/jdk
	卸载openjdk
		搜索openjdk包
			rpm -qa|grep openjdk
		卸载openjdk包
			rpm -e --nodeps java-1.7.0-openjdk-1.7.0.191-2.6.15.4.el7_5.x86_64
			rpm -e --nodeps java-1.7.0-openjdk-headless-1.7.0.191-2.6.15.4.el7_5.x86_64
			rpm -e --nodeps java-1.8.0-openjdk-1.8.0.191.b12-0.el7_5.x86_64
			rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.191.b12-0.el7_5.x86_64
	配置环境变量
		vim /etc/profile
		export JAVA_HOME=/usr/local/jdk/jdk1.8.0_181
		export PATH=$JAVA_HOME/bin:$PATH
		source /etc/profile
4、安装nginx
	安装依赖包
		yum install gcc-c++
		yum install -y pcre pcre-devel
		yum install -y zlib zlib-devel
		yum install -y openssl openssl-devel
	解压
		tar -xzf nginx-1.14.0.tar.gz
	进入nginx目录
		编译
			./configure
		执行
			make
			make install
		进入sbin目录
			启动
				./nginx
	开放80端口
		firewall-cmd --permanent --add-port=80/tcp
	重新启动防火墙
		firewall-cmd --reload
5、安装tomcat
	解压
		tar -xzf apache-tomcat-8.5.34.tar.gz
	移动
		mv apache-tomcat-8.5.34 /usr/local/tomcat/tomcat1
		mv apache-tomcat-8.5.34 /usr/local/tomcat/tomcat2
6、安装openjdk
	yum install java-1.8.0-openjdk
7、安装redis
	下载解压
		tar -xzf redis-5.0.5.tar.gz
	下载编译gcc
		yum install gcc
	编译安装
		make & make install


定时任务
	安装
		yum install crontabs
		systemctl status crond
	添加
		crontab -e

		#! refresh_learn
		*/1 * * * * /docker/h5ai/refresh_learn.sh

		chmod 777 refresh_learn.sh


注：
	systemctl（service和checkout的组合）

	systemctl start docker					启动服务
	systemctl restart docker				重启服务
	systemctl stop docker					停止服务
	systemctl status docker				查看状态
	systemctl enable docker				启动开机自启动
	systemctl disable docker				停止开机自启动
	systemctl set-default multi-user.target		使用默认运行级别：命令行模式
	systemctl set-default graphical.target		使用默认运行级别：图形化模式
